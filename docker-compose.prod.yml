services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "${PUBLIC_HTTP_PORT:-80}:80"
    environment:
      - BACKEND_PORT=${BACKEND_PORT:-5000}
      - FRONTEND_PORT=${FRONTEND_PORT:-3000}
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - web
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  mongodb:
    image: mongo:4.0
    expose:
      - "${MONGODB_PORT:-27017}"
    volumes:
      - mongodb_data:/data/db
    networks:
      - db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
      args:
        BACKEND_PORT: "${BACKEND_PORT:-5000}"
    expose:
      - "${BACKEND_PORT:-5000}"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:${MONGODB_PORT:-27017}/giveapp
      - JWT_SECRET=${JWT_SECRET}
      - CSRF_SECRET=${CSRF_SECRET}
    volumes:
      - ./shared:/app/shared
    networks:
      - web
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    depends_on:
      mongodb:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
    volumes:
      - ./shared:/app/shared
    networks:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  shared:
  mongodb_data:

networks:
  web:
  db: