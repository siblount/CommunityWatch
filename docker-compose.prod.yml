services:
  nginx:
    build:
      context: ./docker/nginx
      dockerfile: Dockerfile
    ports:
      - "${PUBLIC_HTTP_PORT:-80}:80"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - web
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile.prod
      args:
        BACKEND_PORT : "${BACKEND_PORT:-5000}"
    expose:
      - "${BACKEND_PORT:-5000}"
    environment:
      - NODE_ENV=production
    volumes:
      - ./shared:/app/shared
    networks:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-5000}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile.prod
    expose:
      - "${FRONTEND_PORT:-3000}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
    volumes:
      - ./shared:/app/shared
    networks:
      - web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${FRONTEND_PORT:-3000}/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

volumes:
  shared:

networks:
  web: